// 0x2D  1Kb 1-Wire EEPROM
// works, tested on buspirate and two different real 1-wire masters (DS9490 and a PIC18-Device)
// note: datasheet is fuzzy, but device is similar to ds2433

#ifndef ONEWIRE_DS2431_H
#define ONEWIRE_DS2431_H

#include "OneWireItem.h"

class DS2431 : public OneWireItem
{
private:
    static constexpr uint16_t CRC_INIT = 0xCFB5;
    uint8_t memory[144] = { 0x5E, 0x01, 0x0D, 0x1C, 0x06, 0xB7, 0x47, 0x01, \
                            0x8D, 0x9F, 0x6E, 0x23, 0x37, 0x2F, 0xBD, 0xED, \
                            0x4D, 0xC8, 0x43, 0xBB, 0x8B, 0xA6, 0x1F, 0x03, \
                            0x5A, 0x7D, 0x09, 0x38, 0x25, 0x1F, 0x5D, 0xD4, \

                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \

                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \

                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, \

                            0x00, 0xAA, 0xAA, 0xAA, 0x04, 0x55, 0x06, 0x07, \
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55 };
    uint8_t scratchpad[8];
    uint8_t page_protection;
    uint8_t page_eprom_mode;

    bool checkProtection(const uint8_t position);
    bool checkEpromMode(const uint8_t position);

public:
    static constexpr uint8_t family_code = 0x2D;
    DS2431(uint8_t ID1, uint8_t ID2, uint8_t ID3, uint8_t ID4, uint8_t ID5, uint8_t ID6, uint8_t ID7);
    bool duty(OneWireHub *hub);

    void clearMemory(void);
    bool writeMemory(const uint8_t* source, const uint8_t length, const uint8_t position = 0);
    bool checkMemory(void);
};

#endif